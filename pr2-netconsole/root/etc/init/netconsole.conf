description	"Enable netconsole"

start on starting rsyslog
task
console output

script

    # We try to wait for home to exist so we can log there, but timeout after 5 secs
    # so that we still get logs if something goes wrong.
    for i in `seq 1 5`; do
      mount | grep -q 'on /home' && break
      sleep 1
    done;

    modprobe netconsole || true
    modprobe configfs || true;
    mount -t configfs none /sys/kernel/config 2>&1 > /dev/null || true

    if [ ! -d /sys/kernel/config/netconsole/logging ]; then
        mkdir /sys/kernel/config/netconsole/logging
    fi

    if [ ! -d /home/netconsole ]; then
       mkdir /home/netconsole
    fi

    echo '0' > /sys/kernel/config/netconsole/logging/enabled
    echo 'lan0' > /sys/kernel/config/netconsole/logging/dev_name
    MAC='ff:ff:ff:ff:ff:ff'

    if [ -e /etc/slave ]; then
        if (ping 10.68.0.1 -c1 > /dev/null); then
            MAC=`arp -na 10.68.0.1 | sed -nre 's/^.* at ([0-9a-f:]+) .*$/\1/p'`
        fi
        echo '10.68.0.2' > /sys/kernel/config/netconsole/logging/local_ip
        echo '10.68.0.1' > /sys/kernel/config/netconsole/logging/remote_ip
    else
        if (ping 10.68.0.2 -c1 > /dev/null); then
            MAC=`arp -na 10.68.0.2 | sed -nre 's/^.* at ([0-9a-f:]+) .*$/\1/p'`
        fi
        echo '10.68.0.1' > /sys/kernel/config/netconsole/logging/local_ip
        echo '10.68.0.2' > /sys/kernel/config/netconsole/logging/remote_ip
    fi


    echo ${MAC} > /sys/kernel/config/netconsole/logging/remote_mac
    echo '1' > /sys/kernel/config/netconsole/logging/enabled
    dmesg -n 7

end script
